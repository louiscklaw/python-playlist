#!/usr/bin/env bash

# update_by_dir_start
# source script: /home/logic/_workspace/python-playlist/scripts/update_shortcut.py

PROJ_HOME=$(dirname $0)
source $PROJ_HOME/scripts/update_shortcut.rc

new_from_access_docstring_tryout(){
  new_from access-docstring-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_asyncio_tryout(){
  new_from asyncio-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_baostock_tryout(){
  new_from baostock-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_FastApi_tryout(){
  new_from FastApi-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_google_search_tryout(){
  new_from google-search-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_googletrans_tryout(){
  new_from googletrans-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_grequest_tryout(){
  new_from grequest-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_helloworld_tryout(){
  new_from helloworld-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_jsonpath_tryout(){
  new_from jsonpath-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_jupyterlab_tryout(){
  new_from jupyterlab-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_jupyter_notebook_tryout(){
  new_from jupyter-notebook-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_luigi_tryout(){
  new_from luigi-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_morph.io_tryout(){
  new_from morph.io-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_pandas_tryout(){
  new_from pandas-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_parallel_tryout(){
  new_from parallel-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_pycaret_tryout(){
  new_from pycaret-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_pycharm_tryout(){
  new_from pycharm-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_python3_md5_tryout(){
  new_from python3-md5-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_python_frontmatter_tryout(){
  new_from python-frontmatter-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_pyyaml_tryout(){
  new_from pyyaml-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_scraping_algorithm_tryout(){
  new_from scraping-algorithm-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_sentry_helloworld_tryout(){
  new_from sentry-helloworld-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_shutil_tryout(){
  new_from shutil-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_skimage_measure_tryout(){
  new_from skimage-measure-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_streamlit_tryout(){
  new_from streamlit-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_taobao_weight_optimizer_tryout(){
  new_from taobao-weight-optimizer-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_tesseract_tryout(){
  new_from tesseract-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_tqdm_tryout(){
  new_from tqdm-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_unittest_doctest_support_tryout(){
  new_from unittest-doctest-support-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_unittest_github_page_report_tryout(){
  new_from unittest-github-page-report-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_unittest_json_reporting_tryout(){
  new_from unittest-json-reporting-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_unittest_json_reporting_tryout_old(){
  new_from unittest-json-reporting-tryout-old
  pipenv run python3 main.py
  ./run.sh
}


new_from_unittest_report_template_tryout(){
  new_from unittest-report-template-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_unittest_xmlrunner_tryout(){
  new_from unittest-xmlrunner-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_xdotool_tryout(){
  new_from xdotool-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_xmltodict_tryout(){
  new_from xmltodict-tryout
  pipenv run python3 main.py
  ./run.sh
}


new_from_yfinance_tryout(){
  new_from yfinance-tryout
  pipenv run python3 main.py
  ./run.sh
}

testing_shortcut(){
  echo testing_shortcut
}

# update_by_dir_end

new_from(){
  set -x

  rm -rf * &
  rm -rf .* &
  wait

  TEST=`echo $PWD|rev |cut -d'/' -f1 |rev`
  # git branch -D test/$TEST
  # git checkout -b test/$TEST

  rsync -avzh --exclude node_modules --exclude .cache --exclude public ../$1/ .

  git add -f src/lib test/lib

  pipenv sync

}

helloworld(){
  echo 'helloworld'
}

PROJ_ROOT=$PWD
