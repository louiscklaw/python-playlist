name: master_build
on:
  push:

jobs:

  # 
  # /home/logic/_workspace/python-playlist/graphviz-tryout/build.yml
  # 
  graphviz-tryout:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
  
      - name: build
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          sudo apt install -y graphviz
  
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd graphviz-tryout
            pipenv sync
            pipenv run python3 src/main.py
            pipenv run python3 src/hello.py
            pipenv run python3 src/process.py
            pipenv run python3 src/fsm.py
            pipenv run python3 src/cluster.py
            pipenv run python3 src/er.py
            pipenv run python3 src/unix.py
            pipenv run python3 src/structs.py
            pipenv run python3 src/structs_revisited.py
            pipenv run python3 src/btree.py
            pipenv run python3 src/traffic_light.py
            pipenv run python3 src/fdp_clust.py
            pipenv run python3 src/cluster_edge.py
            pipenv run python3 src/g_c_n.py
            pipenv run python3 src/angles.py
            pipenv run python3 src/rank_same.py
            pipenv run python3 src/test_render.py
  
  # 
  # /home/logic/_workspace/python-playlist/grequest-tryout/build.yml
  # 
  grequest-tryout:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
  
      - name: build
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd grequest-tryout
            pipenv sync
            pipenv run python3 ./main.py
  
  # 
  # /home/logic/_workspace/python-playlist/helloworld-tryout/build.yml
  # 
  helloworld-tryout:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
  
      - name: build
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd helloworld-tryout
            pipenv sync
            pipenv run python3 src/main.py
  
  # 
  # /home/logic/_workspace/python-playlist/pandas-tryout/build.yml
  # 
  pandas-tryout:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
  
      - name: build
  
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd pandas-tryout
            pipenv sync
            pipenv run python3 test1.py
  
  # 
  # /home/logic/_workspace/python-playlist/pycharm-helloworld-tryout/build.yml
  # 
  pycharm-helloworld-tryout:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
  
      - name: build
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
  
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          pushd pycharm-helloworld-tryout
            pipenv sync --dev
            pipenv run pytest -q tests/main.py
          popd
  
  # 
  # /home/logic/_workspace/python-playlist/sentry-helloworld-tryout/build.yml
  # 
  sentry-helloworld-tryout:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
  
      - name: build
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd sentry-helloworld-tryout
            pipenv sync
            pipenv run python3 ./main.py
  
  

  # 
  # /home/logic/_workspace/python-playlist/github-build-merger/subjob.yml
  # 
  test_merger:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
  
      - name: run test
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          pipenv --help
          github-build-merger/test.sh
  
  merge:
    needs: [graphviz-tryout, grequest-tryout, helloworld-tryout, pandas-tryout, pycharm-helloworld-tryout, sentry-helloworld-tryout, test_merger]
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
  
      - name: run merge
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd github-build-merger
            pipenv sync
  
            pipenv run python3 ./merge.py
          cd ..
  
  
