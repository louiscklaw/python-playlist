{
  "reports": {
    "doc_string_added_by": "attach_reports_meta.py",
    "explain": "update from meta directory",
    "meta": "### reports_meta/unit/desc.md\n\nUNIT TESTING is a level of software testing where individual units/ components of a software are tested. The purpose is to validate that each unit of the software performs as designed. A unit is the smallest testable part of any software. It usually has one or a few inputs and usually a single output.",
    "testsuite": [
      {
        "@errors": "0",
        "@failures": "0",
        "@name": "unit_suite1.Test_unit_suite1-20200807150203",
        "@tests": "2",
        "@time": "0.000",
        "doc_string": "# basic unit testing\n\nUNIT TESTING is a level of software testing where individual units/ components of a software are tested. The purpose is to validate that each unit of the software performs as designed. A unit is the smallest testable part of any software. It usually has one or a few inputs and usually a single output.\n\n\u53ef\u4ee5\u964d\u4f4e\u65e5\u5f8c\u7684\u7dad\u8b77\u6210\u672c\uff1b\u5c0d\u65bc\u6703TDD (Test-Driven Development)\u7684\u5de5\u7a0b\u5e2b\u4f86\u8aaa\uff0c\u751a\u81f3\u662f\u52a0\u5feb\u958b\u767c\u901f\u5ea6\u3002 \u7a0b\u5f0f\u78bc\u54c1\u8cea. \u7a0b\u5f0f\u78bc\u7684\u54c1\u8cea\u6700\u4e3b\u8981\u7684",
        "doc_string_added_by": "attach_testsuite_docstring.py",
        "explain": "this is basic interface test explain",
        "system-err": null,
        "system-out": "hellworld\nno_doc_string",
        "testcase": [
          {
            "@classname": "unit_suite1.Test_unit_suite1",
            "@name": "test_helloworld",
            "@time": "0.000",
            "doc_string": "# h1\n## h2\n### h3\n\nhelloworld paragraph\n\n1. hello1\n1. hello2\n1. hello3",
            "doc_string_added_by": "attach_docstring.py",
            "title": "test_helloworld"
          },
          {
            "@classname": "unit_suite1.Test_unit_suite1",
            "@name": "test_no_doc_string",
            "@time": "0.000",
            "doc_string": "",
            "doc_string_added_by": "attach_docstring.py"
          }
        ],
        "title": "basic interface test(Test_unit_suite1)"
      },
      {
        "@errors": "1",
        "@failures": "0",
        "@name": "unit_suite3.Test_unit_suite3-20200807150203",
        "@tests": "2",
        "@time": "0.000",
        "doc_string": "### Lang test\n\n  test the lang list",
        "doc_string_added_by": "attach_testsuite_docstring.py",
        "system-err": null,
        "system-out": "hellworld\nno_doc_string",
        "testcase": [
          {
            "@classname": "unit_suite3.Test_unit_suite3",
            "@name": "test_sample_1",
            "@time": "0.000",
            "doc_string": " passed template ",
            "doc_string_added_by": "attach_docstring.py"
          },
          {
            "@classname": "unit_suite3.Test_unit_suite3",
            "@name": "test_sample_0",
            "@time": "0.000",
            "doc_string": " failed template ",
            "doc_string_added_by": "attach_docstring.py",
            "error": {
              "#text": "Traceback (most recent call last):\n  File \"/home/logic/_workspace/python-playlist/unittest-json-reporting-tryout/src/test/unit/unit_suite3.py\", line 13, in test_sample_0\n    self.fail(\"shouldn't happen\")\nAssertionError: shouldn't happen",
              "@message": "shouldn't happen",
              "@type": "AssertionError"
            }
          }
        ]
      },
      {
        "@errors": "1",
        "@failures": "0",
        "@name": "unit_suite4.Test_unit_suite4-20200807150203",
        "@tests": "2",
        "@time": "0.000",
        "doc_string": "### This is suite4\n\nnew suite test",
        "doc_string_added_by": "attach_testsuite_docstring.py",
        "system-err": null,
        "system-out": "hellworld\nno_doc_string",
        "testcase": [
          {
            "@classname": "unit_suite4.Test_unit_suite4",
            "@name": "test_sample_1",
            "@time": "0.000",
            "doc_string": " passed template ",
            "doc_string_added_by": "attach_docstring.py"
          },
          {
            "@classname": "unit_suite4.Test_unit_suite4",
            "@name": "test_sample_0",
            "@time": "0.000",
            "doc_string": " failed template ",
            "doc_string_added_by": "attach_docstring.py",
            "error": {
              "#text": "Traceback (most recent call last):\n  File \"/home/logic/_workspace/python-playlist/unittest-json-reporting-tryout/src/test/unit/unit_suite4.py\", line 13, in test_sample_0\n    self.fail(\"shouldn't happen\")\nAssertionError: shouldn't happen",
              "@message": "shouldn't happen",
              "@type": "AssertionError"
            }
          }
        ]
      },
      {
        "@errors": "1",
        "@failures": "0",
        "@name": "unit_suite2.Test_unit_suite2-20200807150203",
        "@tests": "1",
        "@time": "0.000",
        "doc_string": "### Nav test\n\n  test the nav bar",
        "doc_string_added_by": "attach_testsuite_docstring.py",
        "system-err": null,
        "system-out": "hellworld\nno_doc_string",
        "testcase": {
          "@classname": "unit_suite2.Test_unit_suite2",
          "@name": "test_sample_0",
          "@time": "0.000",
          "doc_string": " failed template ",
          "doc_string_added_by": "attach_docstring.py",
          "error": {
            "#text": "Traceback (most recent call last):\n  File \"/home/logic/_workspace/python-playlist/unittest-json-reporting-tryout/src/test/unit/unit_suite2.py\", line 13, in test_sample_0\n    self.fail(\"shouldn't happen\")\nAssertionError: shouldn't happen",
            "@message": "shouldn't happen",
            "@type": "AssertionError"
          }
        }
      }
    ],
    "title": "Unit Testing"
  }
}